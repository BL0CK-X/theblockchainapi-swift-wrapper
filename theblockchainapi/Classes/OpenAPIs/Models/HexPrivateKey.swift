//
// HexPrivateKey.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct HexPrivateKey: Codable, JSONEncodable, Hashable {

    /** A hex private key is the typical private key used on Ethereum, for example. It looks like this: `0x200b9e5baa38b0dc7551645be11b394e9bf2b04532e4af8824bed2b3de2e0dc0`.  You can use `hex_private_key` for chains: `avalanche`, `binance_smart_chain`, `ethereum`. */
    public var hexPrivateKey: String

    public init(hexPrivateKey: String) {
        self.hexPrivateKey = hexPrivateKey
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case hexPrivateKey = "hex_private_key"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(hexPrivateKey, forKey: .hexPrivateKey)
    }
}


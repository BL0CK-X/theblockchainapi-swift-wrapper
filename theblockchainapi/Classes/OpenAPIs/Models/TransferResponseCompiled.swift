//
// TransferResponseCompiled.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct TransferResponseCompiled: Codable, JSONEncodable, Hashable {

    /** A base58 encoded byte array in string representation. Really easy to submit to Phantom. See <a href=\"https://github.com/BL0CK-X/blockchain-api/blob/main/examples/tutorials/phantom_tutorials/transfer_solana.html\" target=\"_blank\">here</a> for an example on how to submit it to a Phantom wallet for signing. */
    public var b58CompiledTransaction: String?
    /** An array of integers representing the bytes of the transaction */
    public var compiledTransaction: AnyCodable?

    public init(b58CompiledTransaction: String? = nil, compiledTransaction: AnyCodable? = nil) {
        self.b58CompiledTransaction = b58CompiledTransaction
        self.compiledTransaction = compiledTransaction
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case b58CompiledTransaction = "b58_compiled_transaction"
        case compiledTransaction = "compiled_transaction"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(b58CompiledTransaction, forKey: .b58CompiledTransaction)
        try container.encodeIfPresent(compiledTransaction, forKey: .compiledTransaction)
    }
}


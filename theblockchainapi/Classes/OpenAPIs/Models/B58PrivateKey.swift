//
// B58PrivateKey.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct B58PrivateKey: Codable, JSONEncodable, Hashable {

    /** A private key corresponds to exactly one public key address. A private key can be used to move assets out of the wallet and sign transaction with the corresponding public key.  A base58-encoded private key is a base58-encoded version of the typical private key. It is represented as a string (e.g., `4waBTVeAVWEAczSdx36uMrR19668ACgQDs7r386vrUes3UCzvXCQ2FPSCVGb1zJrwcULgpNzgABreyQaWSpGBwfx`).  <a href=\"https://phantom.app\" target=\"_blank\">Phantom</a> is a popular wallet interface on Solana that allows you to export your private key in this format. */
    public var b58PrivateKey: String

    public init(b58PrivateKey: String) {
        self.b58PrivateKey = b58PrivateKey
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case b58PrivateKey = "b58_private_key"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(b58PrivateKey, forKey: .b58PrivateKey)
    }
}


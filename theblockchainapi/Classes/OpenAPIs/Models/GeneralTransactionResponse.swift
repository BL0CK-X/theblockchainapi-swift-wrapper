//
// GeneralTransactionResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public enum GeneralTransactionResponse: Codable, JSONEncodable, Hashable {
    case typeEthereumTransactionCompiledResponse(EthereumTransactionCompiledResponse)
    case typeEthereumTransactionMadeResponse(EthereumTransactionMadeResponse)
    case typeSolanaTransactionCompiledResponse(SolanaTransactionCompiledResponse)
    case typeSolanaTransactionMadeResponse(SolanaTransactionMadeResponse)

    public func encode(to encoder: Encoder) throws {
        var container = encoder.singleValueContainer()
        switch self {
        case .typeEthereumTransactionCompiledResponse(let value):
            try container.encode(value)
        case .typeEthereumTransactionMadeResponse(let value):
            try container.encode(value)
        case .typeSolanaTransactionCompiledResponse(let value):
            try container.encode(value)
        case .typeSolanaTransactionMadeResponse(let value):
            try container.encode(value)
        }
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        if let value = try? container.decode(EthereumTransactionCompiledResponse.self) {
            self = .typeEthereumTransactionCompiledResponse(value)
        } else if let value = try? container.decode(EthereumTransactionMadeResponse.self) {
            self = .typeEthereumTransactionMadeResponse(value)
        } else if let value = try? container.decode(SolanaTransactionCompiledResponse.self) {
            self = .typeSolanaTransactionCompiledResponse(value)
        } else if let value = try? container.decode(SolanaTransactionMadeResponse.self) {
            self = .typeSolanaTransactionMadeResponse(value)
        } else {
            throw DecodingError.typeMismatch(Self.Type.self, .init(codingPath: decoder.codingPath, debugDescription: "Unable to decode instance of GeneralTransactionResponse"))
        }
    }
}


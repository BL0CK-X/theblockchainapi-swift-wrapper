//
// SolanaCandyMachineAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class SolanaCandyMachineAPI {

    /**
     Create a test candy machine 
     
     - parameter createTestCandyMachineRequest: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func solanaCreateTestCandyMachine(createTestCandyMachineRequest: CreateTestCandyMachineRequest? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: CreateTestCandyMachineResponse?, _ error: Error?) -> Void)) {
        solanaCreateTestCandyMachineWithRequestBuilder(createTestCandyMachineRequest: createTestCandyMachineRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Create a test candy machine 
     - POST /solana/nft/candy_machine
     - <a href=\"https://github.com/BL0CK-X/the-blockchain-api/tree/main/examples/solana-candy-machine/create-test-candy-machine\" target=\"_blank\">See examples (Python)</a>.   Use this endpoint to create a test candy machine so that you can test your minting bot.
     - API Key:
       - type: apiKey APIKeyID 
       - name: APIKeyID
     - API Key:
       - type: apiKey APISecretKey 
       - name: APISecretKey
     - parameter createTestCandyMachineRequest: (body)  (optional)
     - returns: RequestBuilder<CreateTestCandyMachineResponse> 
     */
    open class func solanaCreateTestCandyMachineWithRequestBuilder(createTestCandyMachineRequest: CreateTestCandyMachineRequest? = nil) -> RequestBuilder<CreateTestCandyMachineResponse> {
        let localVariablePath = "/solana/nft/candy_machine"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: createTestCandyMachineRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CreateTestCandyMachineResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Get the details of a Solana Candy Machine configuration 
     
     - parameter getConfigInfoRequest: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func solanaGetCandyMachineConfigurationDetails(getConfigInfoRequest: GetConfigInfoRequest? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: GetConfigInfoResponse?, _ error: Error?) -> Void)) {
        solanaGetCandyMachineConfigurationDetailsWithRequestBuilder(getConfigInfoRequest: getConfigInfoRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get the details of a Solana Candy Machine configuration 
     - POST /solana/nft/candy_machine/config/info
     - <a href=\"https://github.com/BL0CK-X/the-blockchain-api/tree/main/examples/solana-candy-machine/get-candy-machine-config-info\" target=\"_blank\">See examples (Python)</a>.  Use this endpoint to get the details of a Solana Candy Machine configuration.
     - API Key:
       - type: apiKey APIKeyID 
       - name: APIKeyID
     - API Key:
       - type: apiKey APISecretKey 
       - name: APISecretKey
     - parameter getConfigInfoRequest: (body)  (optional)
     - returns: RequestBuilder<GetConfigInfoResponse> 
     */
    open class func solanaGetCandyMachineConfigurationDetailsWithRequestBuilder(getConfigInfoRequest: GetConfigInfoRequest? = nil) -> RequestBuilder<GetConfigInfoResponse> {
        let localVariablePath = "/solana/nft/candy_machine/config/info"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: getConfigInfoRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetConfigInfoResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Get a Metaplex candy machine's details 
     
     - parameter getCandyDetailsRequest: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func solanaGetCandyMachineDetails(getCandyDetailsRequest: GetCandyDetailsRequest? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: GetCandyDetailsResponse?, _ error: Error?) -> Void)) {
        solanaGetCandyMachineDetailsWithRequestBuilder(getCandyDetailsRequest: getCandyDetailsRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get a Metaplex candy machine's details 
     - POST /solana/nft/candy_machine/info
     - <a href=\"https://github.com/BL0CK-X/the-blockchain-api/tree/main/examples/solana-candy-machine/get-candy-machine-info\" target=\"_blank\">See examples (Python)</a>.  Use this endpoint to get the following details about a Metaplex candy machine: uuid, go live date, items in the collection, and the cost to mint.
     - API Key:
       - type: apiKey APIKeyID 
       - name: APIKeyID
     - API Key:
       - type: apiKey APISecretKey 
       - name: APISecretKey
     - parameter getCandyDetailsRequest: (body)  (optional)
     - returns: RequestBuilder<GetCandyDetailsResponse> 
     */
    open class func solanaGetCandyMachineDetailsWithRequestBuilder(getCandyDetailsRequest: GetCandyDetailsRequest? = nil) -> RequestBuilder<GetCandyDetailsResponse> {
        let localVariablePath = "/solana/nft/candy_machine/info"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: getCandyDetailsRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetCandyDetailsResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Get the list of NFTs minted from a Solana Candy Machine 
     
     - parameter getMintedNFTsRequest: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func solanaGetNFTsMintedFromCandyMachine(getMintedNFTsRequest: GetMintedNFTsRequest? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: [GetMintedNFTsResponse]?, _ error: Error?) -> Void)) {
        solanaGetNFTsMintedFromCandyMachineWithRequestBuilder(getMintedNFTsRequest: getMintedNFTsRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get the list of NFTs minted from a Solana Candy Machine 
     - POST /solana/nft/candy_machine/nfts
     - <a href=\"https://github.com/BL0CK-X/the-blockchain-api/tree/main/examples/solana-candy-machine/get-candy-machine-minted-nfts\" target=\"_blank\">See examples (Python)</a>.  Use this endpoint to get list of NFTs minted from a Solana Candy Machine.  See example for how to get the list of NFT hashes <a href=\"https://github.com/BL0CK-X/the-blockchain-api/tree/main/examples/solana-candy-machine/get-candy-machine-hash-table\" target=\"_blank\">here</a>.
     - API Key:
       - type: apiKey APIKeyID 
       - name: APIKeyID
     - API Key:
       - type: apiKey APISecretKey 
       - name: APISecretKey
     - parameter getMintedNFTsRequest: (body)  (optional)
     - returns: RequestBuilder<[GetMintedNFTsResponse]> 
     */
    open class func solanaGetNFTsMintedFromCandyMachineWithRequestBuilder(getMintedNFTsRequest: GetMintedNFTsRequest? = nil) -> RequestBuilder<[GetMintedNFTsResponse]> {
        let localVariablePath = "/solana/nft/candy_machine/nfts"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: getMintedNFTsRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[GetMintedNFTsResponse]>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Mint an NFT from a Metaplex candy machine
     
     - parameter mintNFTRequest: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func solanaMintFromCandyMachine(mintNFTRequest: MintNFTRequest? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: MintNFTResponse?, _ error: Error?) -> Void)) {
        solanaMintFromCandyMachineWithRequestBuilder(mintNFTRequest: mintNFTRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Mint an NFT from a Metaplex candy machine
     - POST /solana/nft/candy_machine/mint
     - <a href=\"https://github.com/BL0CK-X/the-blockchain-api/tree/main/examples/solana-candy-machine/mint-from-candy-machine\" target=\"_blank\">See examples (Python)</a>.  Use this endpoint to mint an NFT from a metaplex candy machine as soon as it drops.
     - API Key:
       - type: apiKey APIKeyID 
       - name: APIKeyID
     - API Key:
       - type: apiKey APISecretKey 
       - name: APISecretKey
     - parameter mintNFTRequest: (body)  (optional)
     - returns: RequestBuilder<MintNFTResponse> 
     */
    open class func solanaMintFromCandyMachineWithRequestBuilder(mintNFTRequest: MintNFTRequest? = nil) -> RequestBuilder<MintNFTResponse> {
        let localVariablePath = "/solana/nft/candy_machine/mint"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: mintNFTRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<MintNFTResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}

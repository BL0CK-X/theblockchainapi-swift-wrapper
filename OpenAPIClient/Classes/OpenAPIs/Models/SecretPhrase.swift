//
// SecretPhrase.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct SecretPhrase: Codable, Hashable {

    /** The twelve word phrase that can be used to derive many public key addresses. To derive a public key, you need a secret recovery phrase, a derivation path, and an optional passphrase. See our Security section <a href=\"#section/Security\">here</a>. */
    public var secretRecoveryPhrase: String?

    public init(secretRecoveryPhrase: String? = nil) {
        self.secretRecoveryPhrase = secretRecoveryPhrase
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case secretRecoveryPhrase = "secret_recovery_phrase"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(secretRecoveryPhrase, forKey: .secretRecoveryPhrase)
    }
}


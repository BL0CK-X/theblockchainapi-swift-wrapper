//
// BalanceRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct BalanceRequest: Codable, Hashable {

    public enum Unit: String, Codable, CaseIterable {
        case lamport = "lamport"
        case sol = "sol"
    }
    public enum Network: String, Codable, CaseIterable {
        case devnet = "devnet"
        case mainnetBeta = "mainnet-beta"
    }
    public var publicKey: String
    public var unit: Unit? = .lamport
    public var network: Network? = .devnet

    public init(publicKey: String, unit: Unit? = .lamport, network: Network? = .devnet) {
        self.publicKey = publicKey
        self.unit = unit
        self.network = network
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case publicKey = "public_key"
        case unit
        case network
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(publicKey, forKey: .publicKey)
        try container.encodeIfPresent(unit, forKey: .unit)
        try container.encodeIfPresent(network, forKey: .network)
    }
}


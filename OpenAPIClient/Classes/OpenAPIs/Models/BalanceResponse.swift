//
// BalanceResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct BalanceResponse: Codable, Hashable {

    public enum Network: String, Codable, CaseIterable {
        case devnet = "devnet"
        case mainnetBeta = "mainnet-beta"
    }
    public enum Unit: String, Codable, CaseIterable {
        case lamport = "lamport"
        case sol = "sol"
    }
    public var balance: Double?
    public var network: Network?
    public var unit: Unit?

    public init(balance: Double? = nil, network: Network? = nil, unit: Unit? = nil) {
        self.balance = balance
        self.network = network
        self.unit = unit
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case balance
        case network
        case unit
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(balance, forKey: .balance)
        try container.encodeIfPresent(network, forKey: .network)
        try container.encodeIfPresent(unit, forKey: .unit)
    }
}

